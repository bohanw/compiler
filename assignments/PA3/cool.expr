multi_expr	: expr ';' multi_expr
	{ $$ = append_Expression(single_Expression($1),$3); }
	| expr ';'
	{ $$ = single_Expression($1); }
	| error
	{}
	;

	expression	: expr
		{$$ = $1;}
		| 
		{$$ = no_expr();}
	;
	expression_list : expression_list ',' expr
		{ $$ = append_Expression($1, single_Expression($3)); }
		| expr
		{ $$ single_Expression($1);}
		| error
		{ $$ = nil_Expressions();}
	;

    expr	: OBJECTID ASSIGN expr
	{ $$ = assign($1,$3); }
	| expr '@' TYPEID '.' OBJECTID '(' expr_list  ')' 
	{ $$ = static_dispatch($1, $3, $5, $7);}
	| expr '.' OBJECTID '(' expr_list ')'
	{ $$ = dispatch($1,$3, $5);     }
	| OBJECTID '(' expr_list ')'
	{ $$ = dispatch(object(idtable.add_string("self")),$1, $3); }
	| IF expr THEN expr ELSE expr FI
	{ $$ = cond($2, $4, $6); }
	| WHILE expr LOOP expr POOL
	{ $$ = loop($2, $4);     }
	| '{' multi_expr '}'
	{ $$ = block($2); }
	| NEW OBJECTID
	{ $$ = new_($2); }
	| ISVOID expr
	{ $$ = isvoid($2); }
	| expr '+' expr
	{ $$ = plus($1, $3); }
	| expr '-' expr
	{ $$ = sub($1, $3); }
	| expr '*' expr
	{ $$ = mul($1, $3); }
	| expr '/' expr
	{ $$ = divide(($1, $3); }
	| '~' expr
	{ $$ = neg($2); }
	| expr '<' expr 
	{ $$ = lt($1, $3);}
	| expr LE expr
	{ $$ = leq($1, $3);}
	| expr '=' expr
	{ $$ = eq($1, $3); }
	| NOT expr 
	{ $$ = comp($2);}
	| '(' expr ')' 
	{ $$ = $2; }
	| OBJECTID
	{ $$ = object($1); }
	| INT_CONST
	{ $$ = int_const($1);}
	| STR_CONST
	{ $$ = string_const($1); }
	| BOOL_CONST
	{ $$ = bool_const($1); }
	| error
	{}
;


